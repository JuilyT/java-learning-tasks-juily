package org.Generics;

import org.Generics.*;
import com.javalearning.assignments.java_learning.GenericType;
import com.javalearning.assignments.java_learning.Status;
import com.javalearning.assignments.java_learning.Week;

public class GenericType<S>{
	public static final GenericType<Status> STATUS =
		      new GenericType<Status>(Status.class);

		   public static final GenericType<Week> WEEK =
		      new GenericType<Week>(Week.class);

		   public static final GenericType<Currency> CURRENCY =
		      new GenericType<Currency>(Currency.class);

		   private final Class<S> javaType;

		   public GenericType(Class<S> javaType) {
		      this.javaType = javaType;
		   }
		   public Class<S> getJavaType() {
			return javaType;
		   }

		public static <T> GenericType<?> parse(T s) {
			try {
				if (Status.getType(s)!=null) {
					return STATUS;
				} else if (Week.getType(s)!=null) {
					return WEEK;
				} else if (Currency.getType(s)!=null) {
					return CURRENCY;
				}
			} catch (SecurityException e) {
				e.printStackTrace();
			}
			throw new AssertionError("impossible!");
		}
		
		public static void main(String[] args) {
			System.out.println(parse("MON"));
		}
}
